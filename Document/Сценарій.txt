Опис вимог до програми
Сценарій 1. Пошук марки

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “Марки”.

Основний сценарій

1.Користувач заповнює поле пошуку потрібними йому категоріями після цього натискає на кнопку “Пошук”.
2.Програма проходить по всьому списку класу Марка, та виводить до таблиці тільки ті марки, які підходять під обрані користувачем критерії.  
3.Користувач бачить список знайдених марок.

Додатковий сценарій

1.Користувач заповнює поле критерію за тиражем не числовим значення. 
2. Програма перевіряє правильність вводу критерію та помічає помилку.
3. Програма автоматично змінює вміст першої комірки на нуль, другої – на число, яке відповідає найбільшому тиражу з усіх марок.

Сценарій 2. Додавання нової марки

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “Марки”.
3.	Програма відобразила вікно “Марки”.
4.	На сторінці “Марки” натиснув на кнопку “Додати марку”.
5.	Програма відкрила у формі діалогового вікна вікно  “ Додати марку”.

Основний сценарій
1.	Користувач заповнює всі поля даними, які будуть застосовані при створенні нової марки та натискає на кнопку “Створити”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма створює новий екземпляр класу “Stamp” з тими полями, що вказав користувач.
4.	Програма очищує всі поля для заповнення.

Додатковий сценарій
1.	Користувач заповнює всі поля даними, типи яких є не задовільним для створення нового екземпляру класу “Stamp” і натискає на кнопку “Створити”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма підсвічую червоним кольором ті поля, в яких було не правильно вказані дані та напроти цих полів виводить таке повідомлення “Ви вели хибне значення”.
4.	Користувач бачить повідомлення і змінює невірні вказані дані на коректні то знову натискає на кнопку “Створити” .
5.	Програма перевіряє на правильність вводу всі дані.
6.	Програма створює новий екземпляр класу “Stamp” з тими полями, що вказав користувач.
7.	Програма очищує всі поля для заповнення.


Сценарій 3. Видалення марки

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “Марки”.
3.	Програма відобразила вікно “Марки”.
4.	Користувач знайшов марку в таблиці, яку він би хотів видалити. 
5.	Зробив Double-click по тому рядку таблиці в якій записані дані вибраної їм марки.
6.	Програма відкрила у формі діалогового вікна вікно “Інформація про марку”.

Основний сценарій

1.	Користувач натискає на кнопку “Видалити”.
2.	Програма виводить повідомлення, у якому пропонує користувачу підтвердити своє бажання видалити марку.
3.	Користувач натискає на кнопку “Ok”.
4.	Програма знаходить всіх колекціонерів, які володіють цією маркою та виділяє цю марку з їх колекціє.
5.	Програма видаляє дану марку з довідника.
6.	Програма виводить повідомлення про успішне видалення марки.
7.	Користувач натискає “Ок”.
8.	Програма закриває вікно “Інформація про марку”.

Додатковий сценарій
1.	Користувач натискає на кнопку “Видалити”.
2.	Програма виводить повідомлення, у якому пропонує користувачу підтвердити своє бажання видалити марку.
3.	Користувач натискає на кнопку “Cansel”.
4.	Програма закриває повідомлення.


Сценарій 4. Пошук філателіста

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “Філателісти”.

Основний сценарій

1.Користувач заповнює поле пошуку потрібними йому категоріями.
2.Програма проходить по всьому списку класу Марка, та виводить до таблиці тільки ті марки, які підходять під обрані користувачем критерії.  
3.Користувач бачить список знайдених філателістів.


Сценарій 5. Додавання нового філателіста

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “ Філателісти ”.
3.	Програма відобразила вікно “ Філателісти ”.
4.	На сторінці “Марки” натиснув на кнопку “Додати філателіста”.
5.	Програма відкрила у формі діалогового вікна вікно  “ Додати філателіста ”.

Основний сценарій
1.	Користувач заповнює всі поля даними, які будуть застосовані при додаванні даних про нового філателіста та натискає на кнопку “Створити”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма створює новий екземпляр класу “Philatelist” з тими полями, що вказав користувач.
4.	Програма очищує всі поля для заповнення.

Додатковий сценарій
1.	Користувач заповнює всі поля даними, типи яких є не задовільним для створення нового екземпляру класу “ Philatelist ” і натискає на кнопку “Створити”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма підсвічую червоним кольором ті поля, в яких було не правильно вказані дані та напроти цих полів виводить таке повідомлення “Ви вели хибне значення”.
4.	Користувач бачить повідомлення і змінює невірні вказані дані на коректні то знову натискає на кнопку “Створити” .
5.	Програма перевіряє на правильність вводу всі дані.
6.	Програма створює новий екземпляр класу “ Philatelist ” з тими полями, що вказав користувач.
7.	Програма очищує всі поля для заповнення.


Сценарій 6. Видалення даних про філателіста

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “ Філателісти ”.
3.	Програма відобразила вікно “ Філателісти ”.
4.	Користувач знайшов філателіста в таблиці, дані про якого він би хотів видалити. 
5.	Зробив Double-click по тому рядку таблиці в якій записані дані вибраного їм філателіста.
6.	Програма відкрила у формі діалогового вікна вікно “Інформація про філателіста ”.

Основний сценарій

1.	Користувач натискає на кнопку “Видалити”.
2.	Програма виводить повідомлення, у якому пропонує користувачу підтвердити своє бажання видалити дані про філателіста.
3.	Користувач натискає на кнопку “Ok”.
4.	Програма видаляє дані цього філателіста з довідника.
5.	Програма виводить повідомлення про успішне видалення даних філателіста.
6.	Користувач натискає “Ок”.
7.	Програма закриває вікно “Інформація про філателіста”.

Додатковий сценарій
1.	Користувач натискає на кнопку “Видалити”.
2.	Програма виводить повідомлення, у якому пропонує користувачу підтвердити своє бажання видалити дані про філателіста.
3.	Користувач натискає на кнопку “Cansel”.
4.	Програма закриває повідомлення.

Сценарій 7. Додавання марки до колекції філателіста

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “ Філателісти ”.
3.	Програма відобразила вікно “ Філателісти ”.
4.	Користувач знайшов філателіста в таблиці, у колекцію якого він би хотів додати нову марку. 
5.	Користувач зробив Double-click по тому рядку таблиці в якій записані дані вибраного їм філателіста.
6.	Програма відкрила у формі діалогового вікна вікно “Інформація про філателіста ”.

Основний сценарій

1.	Користувач натискає на поле вводу.
2.	Програма виводить користувачу всіх марок, які знаходяться в довіднику.
3.	Користувач знаходить марку, яку би він хотів додати до колекціє обраного філателіста та дізнається ID цієї марки.
4.	Користувач вводить це ID у поле вводу та натискає на кнопку “Додати”.
5.	Програма перевіряє на правильність вводу всі дані.
6.	 Програма додає до колекції філателіста нову марку.
7.	Програма повідомляє користувача про успішне додавання.
8.	Користувач натискає “Ок”.
9.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач вводить хибне ID у поле вводу та натискає на кнопку “Додати”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма виводить повідомлення користувачу, що він ввів хибні дані.
4.	Користувач натискає “Ок”.
5.	Програма очищує поле вводу.


Сценарій 8. Видалення марки з колекції філателіста

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “ Філателісти ”.
3.	Програма відобразила вікно “ Філателісти ”.
4.	Користувач знайшов філателіста в таблиці, з колекцію якого він би хотів видалити марку. 
5.	Користувач зробив Double-click по тому рядку таблиці в якій записані дані вибраного їм філателіста.
6.	Програма відкрила у формі діалогового вікна вікно “Інформація про філателіста ”.

Основний сценарій

1.	Користувач у поле вводу вводить ID марки, яку він хоче видалити з колекції даного філателіста.
2.	Користувач натискає на кнопку “Видалити”.
3.	Програма перевіряє на правильність вводу всі дані.
4.	Програма перевіряє, чи є марка зі вказаним ID у колекції цього філателіста.
5.	Програма видаляє марку з колекції.
6.	Програма виводить користувачу повідомлення про успішне видалення марки з колекції.
7.	Користувач натискає “Ок”.
8.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач вводить хибне ID у поле вводу та натискає на кнопку “Видалити ”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма виводить повідомлення користувачу, що він ввів хибні дані.
4.	Користувач натискає “Ок”.
5.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач вводить ID марки, якої не існує в колекції даного філателіста.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма перевіряє, чи є марка зі вказаним ID у колекції цього філателіста.
4.	Програма виводить повідомлення, що марки за таким індексом не існує в цій колекції.
5.	Користувач натискає “Ок”.
6.	Програма очищує поле вводу.


Сценарій 9. Додавання марки до власної колекції 

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “ Власна колекція”.
3.	Програма відобразила вікно “ OwnCollection”.

Основний сценарій

1.	Користувач натискає на поле вводу.
2.	Програма виводить користувачу всіх марок, які знаходяться в довіднику.
3.	Користувач знаходить марку, яку би він хотів додати до колекціє обраного філателіста та дізнається ID цієї марки.
4.	Користувач вводить це ID у поле вводу та натискає на кнопку “Додати”.
5.	Програма перевіряє на правильність вводу всі дані.
6.	Програма перевіряє чи існує така марка в довіднику.
7.	Програма перевіряє чи є марка з таким ID у власній колекції.
8.	 Програма додає до власної колекції нову марку.
9.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач вводить хибне ID у поле вводу та натискає на кнопку “Додати”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма виводить повідомлення користувачу, що він ввів хибні дані.
4.	Користувач натискає “Ок”.
5.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач випадково вводе цифрове значення, яке не відповідає значенню жодного ID марки із довідника. 
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма перевіряє чи існує така марка в довіднику.
4.	Програма виводить повідомлення, що такої марки не існує в довіднику.
5.	Користувач натискає “Ок”.
6.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач випадково вводе ID марки, яка вже додана до власної колекції та натискає кнопку “Додати”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма перевіряє чи існує така марка в довіднику.
4.	Програма перевіряє чи є марка з таким ID у власній колекції.
5.	Програма виводить повідомлення, що марка з таким ID вже існує в власній колекції.
6.	Користувач натискає “Ок”.
7.	Програма очищує поле вводу.


Сценарій 9. Видалення марки із власної колекції

Передумова

1.	Користувач увімкнув додаток.
2.	На головній сторінці натиснув на кнопку “ Власна колекція”.
3.	Програма відобразила вікно “ OwnCollection”.

Основний сценарій

1.	Користувач у поле вводу вводить ID марки, яку він хоче видалити із власної колекції.
2.	Користувач натискає на кнопку “Видалити”.
3.	Програма перевіряє на правильність вводу всі дані.
4.	Програма перевіряє, чи є марка зі вказаним ID у власній колекції.
5.	Програма видаляє марку з колекції.
6.	Програма виводить користувачу повідомлення про успішне видалення марки з колекції.
7.	Користувач натискає “Ок”.
8.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач вводить хибне ID у поле вводу та натискає на кнопку “Видалити ”.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма виводить повідомлення користувачу, що він ввів хибні дані.
4.	Користувач натискає “Ок”.
5.	Програма очищує поле вводу.

Додатковий сценарій

1.	Користувач вводить ID марки, якої не існує в власній колекції.
2.	Програма перевіряє на правильність вводу всі дані.
3.	Програма перевіряє, чи є марка зі вказаним ID у власній колекції.
4.	Програма виводить повідомлення, що марки за таким індексом не існує в цій колекції.
5.	Користувач натискає “Ок”.
6.	Програма очищує поле вводу.
